
/*The program must accept N string values as the input. The program must remove the vowels that occur in between two consonants. The program must print the modified string values as the output. 
Note: All the alphabets are lowercase in each string.

Boundary Condition(s):
1 <= N <= 50
1 <= Length of each string <= 1000

Input Format:
The first line contains the integer N.
The next N lines each contain a string value.

Output Format:
The first N lines each contain the modified string value.

Example Input/Output 1:
Input:
4
age
laptop
history
great

Output:
age
lptp
hstry
grt

Explanation:
In the string "age" the vowels a and e are not present in between consonants, so age is printed.
In the string "laptop" the vowels a and o are present in between consonants, so lptp is printed.
In the string "history" the vowels i and o are present in between consonants, so hstry is printed.
In the string "great" the vowels e and a are present in between consonants, so grt is printed.

Example Input/Output 2:
Input:
4
management
reader
snake
chrome

Output:
mngmnt
rdr
snke
chrme
*/

#include<stdio.h>
#include <stdlib.h>

int main()
{
    int n,j;
    scanf("%d",&n);
    char s[n];
    for(j=1;j<=n;j++){
        scanf("%s",s);
        int i=0,len=strlen(s),f=-1,l=-1;
        while(i<len &&(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')){
            i++;
        }
        f=i;
        i=len-1;
        while(i>=0 && (s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')){
            i--;
        }
        l=i;
        for(i=0;i<len;i++){
            if(i>f && i<l){
                if(!(s[i]=='a'||s[i]=='e'||s[i]=='i'||
                s[i]=='o'||s[i]=='u')){
                    printf("%c",s[i]);
                }
            }
            else{
                printf("%c",s[i]);
            }
        }
        printf("\n");
    }

}



